%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.3 (Build 16D32) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 925 991
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 925 991
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: IYZADF+Biko
%!FontType1-1.0: IYZADF+Biko 001.001%%CreationDate: 4/4/17% Copyright 2017 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.001) readonly def/FullName (Biko) readonly def/FamilyName (Biko) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /IYZADF+Biko def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /R putdup 34 /G putdup 35 /B putdup 36 /A putdup 37 /colon putdup 38 /space putdup 39 /one putdup 40 /five putdup 41 /six putdup 42 /comma putdup 43 /two putdup 44 /zero putdup 45 /seven putdup 46 /nine putdup 47 /three putdup 48 /eight putdup 49 /four putreadonly def/FontBBox {-97 -262 1038 907} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF2E3C14A4C9BCB2A27341AC1E531512F81D08C672CE2A6425EFED2F9EDC071547675C62FF203271214CD122C8579F89660509561848D1A7D78D9459C1B3AEC2B653A387E1932847A72A365D6CBBB9B9A0B8F1BCCCE1E1A98C4246D8EF4D21B9ACB5F763DAD3E9BE6D05DA2DE76D8B841B07E8E1493D6552A82D572DDC213B477A4B7934483A22C3B89B8226B06C63D4EFBC2D4A6094AF02BA74723DE6D47F5EB120322D3E63EC947E358A8B52DDE72A97A56DCAAAB62829EBD4583E7E24F03D183B79E077CC94FBD0A708DD2E24796142CEDD514E8D763DFE756795AA5CF0AAA2B70E0E48059BC40416F9A029BE481CE6BBFA5002E18416BEBB6CFF1263B416ED98599DCA4D54DFFED4DC46B80B8972382D7B75B8322A0DEA54FF52F14C3AAC4847AFCC604B0D3D6B23B228C0528F98F2D94EF32CE8B2FF383BE7D512D71CBE7606340FD5CE8B49A157B627EAC767276A8EF69DE7F890483453863A4892B461BFBE77E5CF925589B5A960AF01F32E096B654DE262131EB87ED8885DFFF14F74A7A5E055B8B945196BDC5B008CF0AEBA54DDDEDBEF65C8E7580D233896B9BC0B1F7D678AA2A79C5E20DF7A232829F6A5440AE1CB2D4AFC2BCD50BE438DCC0A965453EB8B012F9D261756A80272159C20A24F09628BAD4E6BE45DBACEBB835E25253EA353B5EA895852DC07486661138498505FE85D9EB113EBB4457E57CD7182A926F6AC98F2DE4330593E33F87A852FC06DA46B0A461A093956F87917C68A5ABD1484DB2BDE252A13C7EA0255898F6E68E0C36B8256B8ACB908C191F8AD3D4FF82D588B1960F46C001C081B132A9276C082130A61860306CC448CF77F033DCD99F6D4ED0D586EE7F3C5ED85BDFE773C065F315646BBE7E73C045B611458C47AE870B252982D6C6A1C4CA9AE2B795C8007D665EBDDF33A1B7910B8B431027E2B54E46ACC0D28AABDF830E600A0BB3D57A73EDC4AB0977930280B0F2D455E7EECEDCD293CB1CBC51EF095E59986653F8288FD8A3919067E40D0931B763072D109E691A70E27989ABC76D09BD97DC81EFC34295EBBC8BCC8C24DEEC6770A640B22DF2C1C9DF69AAF260B3507EDB89E7C898EBAA099F6CDDAACF5BED24887ADF4399739D1CA700DA95F454338E03E07DCE58E1351F3AA02900DADE2A9D4A56327C0C1A2D10979496D5A5A5669A43C8E315D90AEC9BA7AB762B458206941DC380AF1804209C0F468730C592F996909EB1D8710953847236B3DD079953FA3C2D132BD35C6C26DD1124F2EA80F6211618B465BA542D3B0CD594C6783415807E6AF5D60E269E324362A1534FC731F3D07BC5F1FC94B3FA3A5AEBF677C34DAEB5DB630C6191CAD8A7EBF62580C313BD184D0C6852049510F726EA5189EF7AABF351047C762B043716810C7178D460AE6CD429B428466C899AC04A09DD7E0F563A376B20DA52895F2BFF2124D44BE3A401778C1104B1926569FE32330760F759A47D1BCF2455D633302026DADBDAF4C14725082AE4E9BC706ACE5EF705DDD45D37EDDC2B7006F1FE88F6F86C82FD06085A838A9506DF4B250CDD954E2297B428000DCD1DE0E7ACF87E7652DD7AD692211CA8E1A8C954C664127C19CB17E09AD5A0DCBB509488EDDC0E331A73478DEF6D206EC57B3B420CF3600621C3255F011E643C203D9A89970D213EF2AC9225EEFE7B5ACF7ECE58F3531D71CC606958267CD37A168C6FEFD28CFCE92844DF08FC520BC5657BBFE7BED6FB47DB424355F9A63F2FCEDDBDBEAF77F519DAE8BA2E6BAC4646134E7228ED3DE8D4386C6521FA2E2BA8F75EACCF64F9FF07928DD72E3EC93A41B0217C90FA46122CA037608037E17BAD6402935F544CC88957288E47FF6EDD388DD795AEE5A75E0D5170E0BF2BEF219E0D6167FB1C6DA56691CC85EE66BBB59D0C21D7605101B5DCC8E878FB85815BEBA4DDE767DFF4452EA4418E7E39A470733CD06F2EAF44E1809E11BBE79156C7AC0DBE015158D5804D2DD9C7B8399F6CD795DD72BE33FA80B71453C92C59454131D259A7926DBD357EF0DEA3F5C51B7C158C79D09520D59A8F8B4D9A3C619D4E403D9E7CA90A5ACAAAE08C9F62ECDF99EF648FFA5A214E98D461AD43D626BF104D481A6D620968DDE1832709C4610582B8BF718803AE9038D203AB8DB02AC6EC78813FC6C55711131D881A6CE02072096168B13C799DA7BFB58CF0B5CF6F14D902AC8A9B4B1B81ACD912EB30B332FD0810D8BB0C0B404F071F24D963280ECF2BBCC5CA91869F93C48449B1BA764FE6D22FC4F73238F96EC010E928A47694B6FE154351ED53A8CAF3B6A125B95D824F4A2CA0257A6843E4095043501D30008E8C6A88D4669578ECB4F7076E478BAA626429319D74143E53A918CA7728F9843780157E1F536301676F95700C665FA48413E0956B9F8B7BD4A13D7A9F51E43F836DA96479A4CE2CB6596384993059F80F3711DE7DD53B32F6EA3BBC9E134A75A77FB799EAF27DD1CB5C8834324B5C1FA9F125C3D7D3E98E88F72C4A7281D5A71F42A3D89231ED1139463FF7F0939CFE3D5E4A1B484C79BA04840EFEB6655394B8F147431DD703A11F40B9FD926B5BC3111D4D3AEBE6E58A6722C00408919BC41DF2F1D92B5C3E5D0031FFC20ED40F51F66ABC87E1E20F4FE4465D85E026501AF1DB8A88CBD5B65E037A21CCEF8D48549EA16D7989F150B4FA5763A84039EB13F61305F46D54B7D7DD05D40B0933172CA03D5B7D2699C42CF49EA764E26C2E5F2944AB92CBA97A939186A61DB61FDF99BCEEFB49B771B36C9AE403D9A3AF28ABE321FBFD800932ED34CA78609C3DA8EBD7BC3C5610E9A2F7D1EC9084AF3EC45E6B3DFC6FB42CB89E8958595089831DF8AE3E5C8310BA33223A4249F24C503264C2376B4439C1B9679492B93D3EB2FD530063D446B839AD22BDC392ADF9B4B7F8F8CE7EEE239B2366F977B7B7561E176A7AF4EE7D15444DF23A03EC635E00F1F2F81F1DEC206B6DCA1A170F90D169DE99C5BEDFD7FA7469ED33097E2CD2EA4941C178F3F864118976C5355753E20A4C9789C180CFEA2DAC640D2FBDFBBF988658BEA691C878B3C204A1408F4BC3A9E4D7E4366120AE4D012648A8F238D3825106DBE88643F072583B03097A62B51219B28A0D22AAC46E6E9A0C7E0DE533EF95C8FE89D9ED876319F33329B3CBAAF17CD6D491E57F1A87DA5AD506E0C41AB93B7185F2F1C412060A967D2D6D58E1BC415995A78EEBA786638351D7E88F88E41270DE355DEBDFE293A2B7E81B6B08D8E85D23F31B1BD7FA36E2B819C4AA125631370185FDD532CDC4543BD8CCFB22B69B1A9B78787C9F454A790C553396CCA0340AE5239B7773014D1D62C8AACBC5827482C18DE6CA3ECF2E9806A839CBDE5E4BD214C2B92CB51C21207A80CD9C1C452C0B45BC21C3626AA5C162A346FA686AFD16A71481AD84E81579405EFBD67B5F72218EDCAFACA94CC332DDBA2B73673367C2A8826C8C753F50991A01B5F31A803CF071B2E1AE78068FC3188AF8D25D7525E4FF6B883405339334D43DBE0B0C79548A2254D6ED16D4E5F9BC24CFF30DEFA4257E433A4070E53357D73EF9550F0462153AFDFAE68801F7CA40E6134F41D92ACC2BD6461477D2F25C470DE976BB22635F73FC647FDC455346AA91C7BBB7428D673E44F33946DD366E7C8F148E0EC0CCB7B3514EDB87A2F2EDBCDB2FB909CE9E5E6BC684C14109DA904EA5E95CE63D20AEDDF519C3722FDBA4CBA7BD0E193D713D76DE86DAC6062D71D3BC1D97AAF79D45E700B34027F98673014E9E9F9B0EB267ECCECC62B109377995213009883E26A1CAF40474D6D8AC59E39D05F9D5863207CCDE2C39BC9486F8AEBDF5409E99D7CBC7D97C45CB85C29247E8754FA85ABB6DD31AB5470D16392E6DC59E5D25CB4004D375B6E84D7D1FE574A4E6084DE72AD4AA21A5C93D2A67F75B71D72BA63BF9E6857C57838AA50898A2EC3E881F2869AEB0B755BB0AB65EEF22112C54DA26A31A8B5C38FE22125424E7A8DEBAC50E7DC9647890281B4F12AB75F11B820345375B4BCFD1F33A0916DB4506CB3A3863912B4FD674794DDC67AF0F7A986D8C0A908316991EE58922A242475ED5220F78DF5F63DD2FAA9B23DDA2400AC9A84746599A8A5ADA04CBA95AC249CAD02D3B3F3DC251A7D97F45DA1C01A3917A729FE9D24001E89B024E2D91204C5C89B54DFA640455E35E585C8E9EBDC21DE2A44C26CC6818708930AE8A6402413E1B1A2C309349E80742867A4AEA8B29AD2C50C91C82BF8398AD71984AB28B9A5B4DA4CF52B077110655879AEE13F3B2CA41789976AF9983FA1F60E0E39E29C03B69B6562F22C29BB7F1B2FB476E316ECD705B51B9858E839A1D5C36EB88E60D80D5482664EC4BAE0F68D47B0F2637132EEB2BE90E2B65AE73B08BBFDCC9BAE9851B854FFC1CC14EC5DE86776E529252F0CC1902D9251F1F3C87070AE7406B0A14BDC7B5CD79FE441D5EC081944CF765A7A43C5EA09972F4C99D633CAB163B2D9861E8DD5A9ECE8D8268EDC443386A58E4EB6F29E996F8542DE4D60C0EFE092D93E3D4FEF028D8FBDDE37EB9591E7449FAB0DB6CFA587ED09D1FE4186D2BB324DA39904B858B717ED6FDEAAA434313D97422B0833A7BEFD9F7CEE50DD5197F9C750F50B1DC67A809DAAD11A94058B21118E385E6BB4E51F5A4156CEF1EA6EA6B00F779C19E46EAA4B5B077C0EF54B1AD54A2E64B50987D9BB6AA4CCB2DCAFF3FBED627A76DB489150AF0279C7ED7FD0BDC74A2E0F72D140589A962E34246410CF1413AF60BC20260220D8FCF69B7ECE13E91440C09957417B685DD545E42BECA5736E01BEBE792AA9AB5966CDFD1896B56CE80CE65FA523D19ED026FAFEC74AAA3DFD8B6304202F6ECC921C6CFAFBF384B61D5454C97D8ADB27094F8D82245F692BF1ADB0253522D3A3C3B3BA1DEB0F16B3843AFEBFEB298A54C8A87E5DA5893A4905B0813F33B79CCEB1FD410B062168D5E38C41D8D2EA8B6A5E6BC35DA480F5AB4338B5F0474F3D11C41F181E33F5B23D4D7044DBB87F5D97C20708EC4C3A535DAB933685BC59E017FEC7174007CE23847B1681DD2F6AB762DF8B5AE8530FB2DBCED7999851795F75C77816FE3B2BADAEC03C6308713980156AD29CB7E7BD58140BBAE9B5FCEACF5B1C31127CFBA474A2AE1DB162D01001E5D57EE6A5609A7F37DAC1507ADCBC3564598738A1CE369C86F82B5D13FC30AAF5F34A9F73E091E072C02837BD62512477C44AFD1A20A07F5D2F7E1D09F5B1300FF36509D804C9962D675D0745867C7038391B2C2FBD601E17F5F2C6919F194922BC1F2C5B15A578C28C40E9EDBD1A7783DD2646FAADA50474CEABDBB5181A24C95F4B02F699E2DD133432B5F957D847969795FFFC230279A232825E56867C717A77E11BAB79AFC9CD6EBAFCE2F4175C514CD2D9E970378AEB8E12E7AE16FAF457DA0A03551367C12A4A4BE827C507395B1FA1604C317FE244DE1812CBFE9855BF296294F146B011FF522DA56BDC04BD57B9116260122E630F310E522E4B75CC547D28CE44E436D978A834E63FB47A6A50138382B6B1F508FF3D8DF2D61A29CDAF0EA93DAC864CA46F4BDB3D5A58401B1A80D682893E10C874936B59D384868BCA7BE5995131139883751DC83E765E85F7C9DDAD1C54DC82AE01C7B1DFB7334197AC3B67467EE00210D2DEF7F3884CF49A56BFF10C8D3400899F79F6FC9026401A63782F569C3191D0416F7B27BD321C5CA688937A4755FC4959CE84F497C628875A9B32879F98CE6FA11FBE3F89CF2C2D9D0E208787F8DD7008A9133D774CF95E223AC8880BB71C369808E2D932C8A0AEDBE3D81710E6C488645D3A5BE83580BF327280FDF9D32D7AC3561B599D3B260C484F94803F8148C95AEE7EB112DA209853AA51F5526D258BC5947F60E26375E116A71D6E5AB310B1FD4C38A0C598CB30DC664D9ED8D9F99CDF4B55BD60084847DD3D1F9A195CE7523A28C2588710453A28589E83077E02F561A8B4F686DF469807D62DDE154CC86D7097E214EEBF84A5590B3C5B9727DC7F385B2D3D84B863030657CCABE37092C86E99C58371D34469FCDF4E1BC7E6626AEB6D4F514EB939529231163FDDC6D8061FAB5C79F2715AC85D97ECF817F2A783D49944B9773B3BCE1745E416059149C67B173FFFEE5A9AA75D4C41137DD1FFA89627DEC996CAAD1535E3060EBF7515821F7C9469FD9BF4968E1CE4F4CC87A8AFD455F7CBDDEEBF4BEAFABEB1403C4A30146AD4881C803915108DCA98CD44DF03A059F5878F081797C2ADE161BE699DB8C692FB477D2F5A8C4A5C75A247C2AA57BF5703760F8DB900F1AB209DD50D403ECCED5E95800FBF8852FA02979D4C88EF2C6A13818A4ED9CA39654FFA60A987C382E0D56AF8D50DCE771700B60D653E295E9F03A9A8C328ADB3A3E258CDB886EB0068B1FBE78B9B0128AC77F6E86346DD49ADED78E592BE7C5E0287BBF78A9E88B9C8507DB2EC6E05597A35D3F6A80462E36876CF1AFC179CFA44C39A8F9A149E7516219EE599B9C0FFBA0329F17B0381E6347BBDD468AF1D7777351F100488B0BA50509F3B6C6035AFADAF94CCAD8220826050D27DC30873659983095BC1050DB0D9A3C03DC0BC978727B8FB2D968B218CB6385CC2DD5312904EDB269ABFC308DA09214EE5856953339DA7DBEFD18DFA074109F5C39EED9009D4491707F55263F2F37910C4ACD6F12043579CE5DA6640E4CC8629504944B98DFF494401B5CA62ECAC4D9F96A69BA0FFCE750E118F88A6747E4717216E3AF282A180D29C9947A7EE58171DFE14CF0F589015BB8329E6450BC4EACFB508CC08625FC92F25E6D31E0D26D89DBEB143D5FA2BDA3819A47057B8FECB3C09E0A391B5EADC38DC1AB744334CA0F7BD23324DC6F0CA1A72D8B1493CCEAA003D71FFA2614A917ADD765F608FCD1A3EDCEB47ED074A40B06B356F89A9F8306D0BD2FE88690AD4B42D4F35DA777A0E810B7C9D670493E23807543E6C96FA65B1E1FCC61D9C7292D4C64B517611414E8BFF3F549FE2F46E97D8B03D03E0691A14879C34554BF882BB54D19EB805D0AAFEF7BE08DE971776C14FC1472100C0E05E9A4FD5CD491BEF99995BF160B97116B6311446BD878AECC178D177130E2A57338586CCE7514EF3DB4D842B91CC03B65A08AA6BD5FE44F0D324047B465AAECB9AAD90110AEDA345274E59D6F9A92EC4DB48616B5EA75027DFC7086C1D4E3F35871B93DC28F9D8D18D75984C01E5DB1C7864D7C13AFC485B13F72F7BF5CA35EB4052D64AA4A734B5B792E01D63E603A91EFB332D17ACE008E5891890F30E59B0985C16AB218D4374B99E42500A15396368413023D6A5BC9F80CA996EE481A6F1D9C88CB4BFB8521B5BA2F18BC10D0D64F2D5FD17B621D1933B26EB1553FACC554ECFED796312D9B67835AC8E0729C8686EBB902CAD886763ACC659E2D26CD4FF5C8BAAA6075DD574F6C6E93815EBBF9A0BC2393D8F4BFFF4A27F70515E345B5D4FDA869B3FA0E26CB0D23A59BED3128FA088EB6A4D56DE3F793243EA6F3D8E5C149E08002F13F0C22F67784FA6C73989CD36925FA0E66E5A61F764F1507093B5BB6E96E7F6019B7919F180C757B3FCF98CB8AA4C177EF4D1AC11F06362B39CB45A4C9758A78C4144F6FFDF39E8EE6E3E4C967461DCB57E123CFD8B4E04B5A8632E661FBC82BD2FFCE07971B792FBA16A354D87393CE01D86D18F7C8A4E98D4D9D8D9F62943EEF1CF285E6D1DD65AC866E4EA2BF68A8A6E0E6195647F1AB7B413FA6969E4266ABB0F5AF20025DBC48B0FAA09EE6EBD6F22EAE482F8A56C95877234F9FD6BB97B3AB5BF8ECA2B286602B80F97845672EE0A627A7961B93C1D7677D1903227FA5CEB7DACFB38B7D93E1A5FE9DA03BF04E0EDD272408198957F0548B1DE845E881EA3274471C00E614C59528E39471FF4D95A728F20AF6DB142F9D9449039C13DC1D11DCF7F59CD9DC29660F1FD9B48709CBCAECB38FF26680A947159E4107ED64F1E5C83E29E2D3176A45AB97AB62BF578E2C9540E3444D9AE34894D6F57772D3C9389D15190FE6EF76418EDA7CC638EB0A8FEA78658D7E6CA5438C9F02F0E3860BFD99D4EB13E2637E1197FF5D80E6974E0BBDB8522D308C03345296C82AB0BE6932EB110FDBCFFFAB3FCE76B244356879F7446CB0810991654D6313AB4D504EE07367C7435E0F8A21FDEF6101B66E6F09E890FAD2B965F134615C1B1D381CFCB1923EF47AE37B6EE9A257FCD1B1BFEF5335E1408C7DA0D6F74EC565129E770A8C113BC580F668083DA533F9CCD8452A921F1C3645A54FFF00408429229065FC55982BCDFA3A55C115529E7AC06F5808035780E7B92BBAE762458C426AC192FCD1176D361B5A54E4827CE682B954F2D9D1B7203CA37188B493E2B976B5EA122EA2D15E3E733348750D4288883D834129337FDAA6627F56BB8D3525B36070FB17F0742D117C5DE2BBD3C45EECEA2241D0828E278412EE931E704C06A81218F5A2606ACBA7F71D9ACED12BD9C41A8AF6EE6B9E3FD86D7254C45EFE37BE33006F95DDA21BAB0EE895F667F313A617C4219F4A233BFA68146C826CEA211213BA4DC701B3B4D118760FD369D3938FB97D35F8385AE76B353DB355936514CD6270A14CDBDECB8920399639B9B55918DBF9F853347ADB2E5C5F7ABA70B5C088FE4F9FB536924A20EC5F58D8C5F62EA4690EF025881E3FF92F690B11CE3CEBE61BF17E26C00AA158EC9D2A6F771F4C5FFC2B603FE4DBF5DB8E407609DE241013A8906D8A40BA7EB55322B02B48700CBA99018EA2E62B9C9820A7E9BB9BA96FB0033C80EE49179680BFD4D44283125FB105972F4513253D8D04F686F27A9D309BB509E097BFF5AF0358842E2FF26862C433ED083A907088E7D176F8F7C4F9D60EE02ED6589B7D697D39BE57986C10EEAEDF9692A023541CF74F09AF40568BDD0BF5D801EA7CA62B4802CEC0A47C4CAC364020F91604D8EFE045BC9046156B10F45F048C4A130D8F4A18DE193395666C8E5CFC9816089375905D4E453C95497AF1383F7BC9A20C38F60C315723B6DF447ECC8906D7DA3B452AAE023CE4774F3431281A7EDB9BC227CD1430641F48CFC943D59BFEB0CBB471C01920A2BCDC292B7ED42A8DBDDF3452134B8AB2660154A3054F89212E49BD0B520C7FA15148870F6275075757696A6A8FCBD73BC82E242C6A0E226403A862046DB836F051FB24DA088F16D86D7302C81D07285DAE4A1B7FF5CEBBB650426E5AA4D6EA1FD3E2F3FC8D323379F64ED12F16384918A54EDC8EB5D6A445059BC4908C99D6C0D8B178480B9280DBDE03BC0D36FED4BA45FDD7B828CA835E3D89C9A3DBC9EC8F3199BFE440BF4E423A924CE4D910D37F38A53F5D4886EBBC129949AF9C72FBC80B51DCF00CDCADD91DD510E44B840F07B232EC477B8E3283DA964E0ADE352E5C7E020CFDFB17BF8C1891769B799080071F8BDE278AA42A643BE51686CCE723A54D7C2040847AE84E5E98E4B0278A77D54A6D5A89F4076BC6D5A5ACB53D4E10ED294B4B1BBC419C5B7C873367EBABED09102CE97A5A4B5DE254CDA35D8C00D8B60EDB8C4A74D185434D782FBAB60F0EB05EC326F7D4869F5BFC5ACBB84A22582522E18A92B72CB0BAC996C9225B209059B1C0659D414700FDAE2C8427480D9696BE841C7D1A389E70759391A013286668BD4F64A8880844CB9C4A6E91133C49BB85A62C7FD55FBCC4B156A3A97A9A588BA526CF9954222C6CAC2748738743D6EC18B82C62A54FC28041B6C8177B6C0F8A5D1EFD4E50DD03C1E56BB717D545E09698881264049BFA2F41C57A62E14EE2741F1C4DDE9DD96642C3F6455D80AE015BEBE2333BE0A615128F1E647ED41F790961F5907FD8D365A1F71448696CD33F0674EB9E32D4894087104DC43C924EB4483687E0B2C88760F2D4050A2182FA8F453BB40AD36E300106A836488222039815D8C0CD9D52642BBA82601F750B6ED0D7299307D644F150855F5C276D1470692ADD3D6D223D66BA98C2A18B4B9CCB50BD5EA1219454AB9478A327073C2C31907EA976A2EB888598766576E686A57A0059F4112A35AA73DB9BF69B429312675F9687C50C3CC3A6FCCEBBFB04AAAA21C7DA1CBFB5F3C535DF8D09E13F184A78E5D22B3D0038F277C987C6756C816021243183AB209D47C26526AD16F1E40C38B2046D564A98541A9F72A9AFC9C1CAAE7C68FDB4247D4DB322E6E6B79DA3B98FDB7FF18A8C991DF467EB0BB1DC56523E497D9596FC7CA86F0501C3CCDA4AB39A27AE30209C6BE8090BC13C1BE0C26653D807BA392D6C11BEC1C099C5FBB2E29F43EED928F4BB6B7BD4FA804A3FAF3BB9DB1E8809FE5548E86BA022867CAC4BC26801C7B05812CABDDB4C77BB4F2CBD38692849D484CE1CB51262A1AD528F8FF8CF3AEFB5826379B83AFBD76B8D4BBC8E8B974CE46D43FDCF4312B04B038C75C609926B4B4B32BB4BE8E159B5B8B0C1EB350A71655C25B73ABC377B8899623F276E3FE053713511E7ACBA111186A0F38F6422E1123D7C449E08337FA5BD2067D48E40E4BBCCC8658AD6D22E0BC3D510D35D5373AFB51A65AD323F7382970404DF19273B55718BDA133556ADC434D9D06C861E7B21D9026E16F3F3E32171C3564C4EC85C430D0D0AB548F996ADF0FC4219DFC30C0190C03D06A44B72D951C1E7032FDF15776BEBE318F77B373714333B8CE0F6EE9445FA5CF9BAEDFDD93F4869749DD47221D84F479651A9C7389F65FCD152E91792B3C052ED39998CFF23595AB1E87384784FC66AE6C16F42ED6956B5EFD48B56EC64D08734554DA0DBC7E287E3299B8C9565AFA9F5DA7F2233C3A2783DD4B70ACE7DF6085A136A0E8D9F065B96844143B6931332DC5A1B2B24AEDE9CE552FB117F44B484D4805D372303D838E6318A31976D01F240B5ABA074F873699E87026CE4909DA2021F7DD5AE3EA842C6E153CB0C6F0B755B59FED3E1ECFABA9B01CF1BE6D6E466F8BFE5AB8162923ABCB2805D3F4B75753B9F9A2AB22ABFDD22995FC3EBB80B0C820F05BABEE54F06C82640D00623622C912A364171FC5364D9321EAE1EF2E6F9F57B51369A990CB0C93D2883A8F95E0EDC8A4194A210185C1182991A46E9CAD4B1A666F764FB2CB85879B45CA24FEA06581A3349AF37E0B43D8A667BAE00A46FFC95EF17EC6BC66D00CE8B859D06751DCAEA94942D0594D8DDF4CAECCE911BFEEF034AD9FD55B86B3386FBDD00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/IYZADF+Biko cguidfix
/F1.1/IYZADF+Biko renmfont
%RBIBeginFontSubset: DUSVNN+Biko-Bold
%!FontType1-1.0: DUSVNN+Biko-Bold 001.001%%CreationDate: 4/4/17% Copyright 2017 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.001) readonly def/FullName (Biko Bold) readonly def/FamilyName (Biko) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /DUSVNN+Biko-Bold def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /G putdup 34 /r putdup 35 /e putdup 36 /n putdup 37 /space putdup 38 /C putdup 39 /o putdup 40 /l putdup 41 /s putdup 42 /B putdup 43 /w putdup 44 /D putdup 45 /a putdup 46 /k putreadonly def/FontBBox {-96 -266 1024 951} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF2E3C14A4C9BCB2A27341AC1E40A672A03688DDA691C8CED05968C19D623A2E3ACEF5940F11D970805078861CDD8721D9C96C3F0C056A9181B471F6DA3142124FFB44E7E0BA48AA21FC783708B9CC4941041EEF8D4078CBD12458D5B340F1DAD2A4BF75DBC4ED7A631043D2208B5EB8D62BD1DA6C84DCD9F9BD733420320E97D2081AF095B8EB722FB4FB5C930CE8825247D849D3B40B3E779C6CACDFA1C64E9288B2C6E937FD13239843843CF941172818DC79026A8A8B9948D43C5CDB2D59ED1C26281144C74437D650E69916106356C0D197E8D17DDC7D7699CE8D466CB53CB45FBDF29D80FA3388C07493919BC28B9F75E6DED39BE26DC937456DA7D7D43EA46079BBC2F8291358BA25F5C2349B635B501C0E20719650195ED3F7D040B3D8712EE0608612C05890FB01C23209E34D77271D1225136305BD953A2BD8422CC9F21BFD150D1EE939C9A47F640F791BF0EB4578FA5BDDCE8657634ABDDF30C2EB4A2BB4D8037D73FF91D754E1D93E89E9B6CC102432F2AA4DE7994F3B4904CF8B230BA3C1B9C15E27AE592D88817A1E3B449C34C19E6B4AB4E07718DB57A81F42F0C854DAD870B6B7C2EF6DC51C8EF00FBD9BADFE32594D316AF47CFCF43D543004D3CC3E591AACD7F034D853307D2CE251B4B5A3D24442BC62A882EA733AA52CC08FCE764111D2BB76EB667BA34403244F9936D137EB11748E46266098BF2B7079D550232634958B51CDAD1391D0FCE9D09881BF8C5D211B8BD988FC1E8113DE06005832AE6414ADDCDCDCC49EE33B72ECF112135F1318CA3A391A5AABA8348C61FAC1AB00961C684270263C3D3FEE4F703840483D4B9D5754808002F0A840D76A5605DE884222250BA0F16885AFD005E8559C588DFE95C50E608EAFE10E874FDCA60ED141D35A19F4D546335867A87B6F4FFF3E0C991D4C58873A7DB78876BBC09E4778214D08E54440502D428FCCAAA4FC4CCDF57DAB7B7A29A98D23C52061D6FC2259D6011A38E241F9F54A33275CCA7B83CB645BD6DA9C1884D3B08AB151AED0A91CB105DF4C215F40EC2BD9B61FCEB8CFBC09C820B5EC76792CEAD345CC52B188361BCE22577C0A072A68EF17EBF40ABF2C974F1E369DCF661B7255CAEAF528951D9CADF6BA77B02F29CC80C218A9361E40F464BA2309EA5D5C16800C9645FA6DB2B194358B8C665E5E131B5F141BAA6BBC9AE8C75D4DC4AD16D93E59523194B8C55A953AB19E641AB32C69D94545C306BB46581F87FE8621849BF13CC4EBE3CEABD393D7D1A61F447EC08A8632EA5C51D3DBAD31DE0EA58E794346651B73E648D618474D4AE6CF186C26857B96FF5A0BD4165F38FBBA792C029803AA1D4C1D58356FFB32240AFE1CB4E93B0D902FC69BC36EFBD852328C224AB441AB55A1B3A7BF6A6BB9916B599325E3169E4A9201E69C61C9E13BB4D1ACEE1FFEC86E3D9C95D2041ECCD1931376F40BED74A1197D6B6ED54D514AF907EB16A5303010666DC40DE2EC996CC3636520BA31F77DD9BD7EF0E6116BD9F5B47E75F21C0A1B24A5820129C0C8428698EEF13E386B31B1DC4937F576F8930869A510144FBC648485B176FB2D7FEFB9C5E79B9696FA640645FE0724F64E48B222D6EB6C799371B273B3013D858ABF0ED5E74301551773216CDC9E8572B2F19E59B02E386102F1331636EC8807AA6C6D7E40BC9602076B4627594CCA1E210382AD46B91E83C44F3F7F36E0195DA9AF2D0DAB91C7640F53D5F06790B52C3197C5922AAE98873B2D664D328BADE092486ECC656FF52B025146616F61D9D810130327CC1C04157543DFAE380F7D79C64F661D148910AC47C7C8847CDC2458A8E57EF8A01DBA968B8A3334A4C1BB6D64A21228D45C6B4AB3850495F26C276BA5ECA1AA4487E06F148A4B0E409A0DDE277CF62C0DAF1D26B2B0E679F056866A0C9E6E7DCAEAE5B2F93DAB595ACF8C982D05FDDBC1F904F19FEE171749A48AD77BB6ADF188C64F41A1EE3FA500CFAFE84B45F95B7E704430418A696ADA1FCDBB07EAF82CAB071C62FE8C9A81959A30E3A52E9AD592307BF2EDB5032A41DD39F48A5C5759F619B98D318134FBC33E363F55273B3C54A9DD2194CD9CC988F0833321AD4368D4772094E36C234D6472C98281D9BBCED2C002D007FC8C5251694E6F496F0971B8429DBA587B753ADC511AD48B02A6F0EB811808B6078FCB66246AB5F12CF8E3B46A89A0E519ED065DF58F0F7EC0C89D9BA267395DE8D9F70A02A4E88E810DCC90A6168EC2396453CCF161CAD90763A1B1BF920B11FC44489A64DDF2D892F85FDFD563AA63D52042F023FF1189675B59B2B326BA0706D27E58B2CE4BDAD58B72C7167449D5A09BA6F47906F5508129B349BD21BFBF016DECD2CFCA7FF7C68DC32FEED95D7323904D6394DB8A7484CF381D345678E73AFF493821A3883972D768484262C9DAC51DADCAEA09C80C3EE60706DB9F00F0FFD777F519800824ABDAA69980CB81DC4BAF2C1399C47D8AEC699747433CF8AB605EDA8054C6532AF5767588FF8D9A9673B577F258C994257BA8F1B9CAF6AF3DE1E670CAEA9517301C0CDD24917A3DB6EEC5FEA8A38DDF76C14DE6CF1955EA3DC699930ACFE2E4E612374D6A1435160EBEFBB790EDA0DF22DBC0C6E3C33F1F487ADC6D7E6525DF352A99CB23A68D62339851467012E65F94892548613F97BFCC800BD6D67CB985D76EC0A5548806EC431D28F97A798A74477D3706D53097752E05775B5EB13E58408162B333D777D11B7EF1C0E65A9931C90C92A454E51F8A19E1C94D5ACF88E626D8735B17319F365EF81365BB6EC19C6DFAB2891E5026AA624465A54078802ED0BBB5A215CA3EAC959863912FF1EB1D75B96EA9CFE5E671A7D41DE92222D45B427069C5ECE70924AC1A78EA050BF37FBFA5D1F5EF0C4D69C6BE5C23D5606C20F76A370C45D278C9EF559E151198EE3B57C10851B6F0AB804DD39B0060510D57A74140056CFB863AEEA927CE9051B00AEEB6F2BA994F395898A3F079376AD6CF43B4956152A2C0C4D5E87D3A57011EE49C6FD3DA230F83E60825273A941381A1997D1657BAF3603152052502792B3019F0CAAA63ABE4C6738AB5624E21FE837C4175D6D24519BD9D490193E6B03304A37E448418837688A347F25E05A4086D54222D05DD84774E887D2DA5E976FAAC65D85CEAD6FFE66AD1D5A87532BD630DE24C4AC6B0F82DC500A0E41C453114B55F5A24A183C9A7B7D50A5C24F5BABFB3AF7ED99178798A8E10553AA6108B2B32F4CC6CD918584F9AF18BB358CDE6D9F15BFAC51D682333978F94363CE71CFAA1DF2769BA786191A3E3E12F4768BF32F5608FFEAA178E487987BB0306DA16C22A99D492D214F324B064CF10D3D0BC97249F94854208F1C2AC955A4A37FC8EB4B4712F1598E646E07EED490A07F99943A88FAB43A8DE392B7ECBE5D39B8246076FFF314872D13D44F9148608A7FAC30B983F9AB6D666F4B8D67B90339C1674CA89B046EB3F42B98F6AD32B67E6B18B9903EF7D6BC2F5C91C36F8D2D45C312AFDF75F91E57B3CC6891F296428B035910E9DB150B69AA564A255623793BEE8C613ACD4ADE904B5EF4CAA9FB6CCD42B9DA3AE903896625BF698C6F1E7F6647CE576EC022046382F9A262C3D8C4C59A38F80013490EF16B11337F6D94BF2F691AA59004D57379C6A8D2B0E1616BB4BEC0E1451BC16835F2449A13E207C60FAC24371BD119CBE17004085E2409FA0092A32BA9D489A5765B1376352DD6CE009A9278E9823BDD52B2853F467B2120F8AF933DA8E47760F52378CC458EDCD3A23592823A1EF1CC6D3C8A61580673EFC422FFE050330C88D0C2DD3A5278BC0886CBD89E0254BAC4F3EBC32B89971B94D296E702FCBFCADA27CF77ADF838D93FA2FD38B16BF116A7B92193885147BCE746A7FA41D7F2503F6A783514E758DF87BB5CB8CE8C6FE35E59867242D230C70B3171D8E63477C7405273ECECAAADE972DEA3CCE94494D0EE2F82EB6C75A0A0F616D100B3566A4A1F3406FD6630448DDCFFD0D72074F2E4DCB5698A3D3D696D1DCA348471FBB9EB02D99CE6253E4B62E7E0DDEC4D9B6800CAC4942C12877535FE21C39BA7AB693D324812A982C87932E9A15C758162B1284056329C6177D8F9F9EF5F100FCA3AF44286EC0F6814D7B7E3E0A3C24E6CB5D9A2CCE8EBB6BE474E513452BF5C237E9B744DB11231698D099A220769FCE21921A2457E9EF852C4B445D4064D552E08C427BC96BA8FE65073AA655DB75749ADB33EDE93F5BD840C5138362AAA2691BD0C0754491E256C7EAF8C3B5A4F43466A2F8D26A72E26948F85B916E2A495C28E0EADE4930C124DF296E5F78EB5722B4131F44BEF6512C44976C994AA3517CFC690AE1B0F0269A3C1CB17805039B03D97229911CEC27CA255F8539AF2F6D65E5074964FE0D69C21E1FB147CE2919EB1854153E90466BE22639D1700F7BC2818AB4AA674A6CFF46E43B48F58B1B6BD441049F6485B84F843CAE11FECE639565FCA30CF9E495A698A3253EE11B1D6A26FAE0A1814B2777FE86220EF3D8AEC90AF13B5F35C53B47081112EBFAF55B1461818B2F284B717C413BB60548AEC1811315C2316D57F73A9B90D090AA887A2A61C43AA7301F5563BEB14BBE60C23AEADCD8999D9AE5A1BE7AF3B182D08AB8D8CC9813032F805FF90BAF3240F77D70A05665441A7DDBC4C3912EB19FEDAA508D7D2DBA78481049D15517F98E4CFFAA38122F9EC96D67F4CC8E8F0EFB5BC1B8FFCA89BF31C01C306431778D4A33FFBAAED79E48559EFD3F17014060D3EFBCE23C36C8C6B8DFFAAE43A26AD3556CFEFA94114D667DDC58DA4961709BCFC4FABA8C64DEC0389609983A5383A854973F35C9B7E60C8B5476EC8DAD094AEFC49DA2B4383C0F1A7818176620D9D3437BE25033A77E2A8DF3AD5FA219C69FAB5073B16711172701485C75B2B2B5BBCF3153C2122D9D7A403E06661E443613819370735FFAEB8F51B10B792F63DF25F3B33E33B2AA965AA644B7F1E0A07B3D7C93C7F378C3B38C86678816C8FADC214643B5944BFEC01D30068DD60763FBEBFD4F2DE05E2B947C3EB1EC5041BF044BEC3F5428F13CDA902789F75ACF14161DA10E5F97F315715F88637B0C4D983B832AF74D00ED593CCC66BEFDE1AE8C27B91C7082DEEFD2CE5C3111016582D17F38A4FFC50639BF35E2A813805EA41156C5089C3B43E33F45113E0B90173364564C8F647C9089FFB6C371C0769FF364C94AED5E88B325B6113D43E054F62F3835BB1CFDEAD8479CB0C93A6EB4988D4BB692FBF5719CAB830F70008E87B6162FD661CF980C529452EEF7FAC8C3D0DFE992B325671699D8DACAFBDF679768DE75F204C0BF79771FA40C3A751D68CC911E82C7081078F88A27BD87D98933C937714C6C4704B7CAF62E0E1A6DC68A9A2AC32A14E9D9DCC9E65E07992BCE5F242E1FF94E54346C213488D3E82475F94E944AB97F515C3B31D9D4A8CE17707DB2873E2D49227B302FB81EB4AC7FF5254863D4D7E121F8ACE96E47C1677847DD4F8BF8FC3C75B378DD42E6FF40AF60D70AF1569AF146EB6A0E4B3EB5BD72B7CE44C05594DE3BF429605ADA9B710817CE0BC938DE1134CBBFF9667C5AC5AB723337FCA577ABBF5B22BA21FED49A1CD9F3CD5BA47E068F8B561FD4DDBF8A8B0B225F9D6936BEF8F8C6587C6728B6D54CD75F063B534C570AF43C0B553C62998A5F4156591C025176700A8EBC8C1B12566E85F457FE85006171C323FE137926E04783EC71CD0A01A3595A33A229F1618ECA062986125F1B89244EB7FB576421CB8EF8FD585C0DA49DDD78B74474CF0905F7CD44D1E79DA26CF8B5FB76613296FB1F39AF2001BBDAAB12CF4391F77E5D0F575F37DE05B9C0607DD8E44C3A0869B8DD6A5FD7DB96B76543A07661EF3888F93E0A7553CE41B23807D3D7BC43AD0755F86AAFE208BD6A92A7041D9F503E66AAF12BF2613BD80B2A6E5019C15B53CADC2A40E290CCE4D24DCAE6B24133AEB9E5361A64A74B32FEDF5E2709C7A4070EC81D445D8E0250F6999B6368923F8599E198BDA54F540A49B04B64C556624E9E42D4B1D7E53B0265729AF77CC1EFE5C8866BC2A11ADE5AA931AAFFF145BEBD405AC3D5DC696476D6267941F0C01FF4723820D2DC15BA18BA4413742D94FE66774C2AB7AD480B0BB970046F32C6B186BA63574E1E12B14DC9F4A1696221E4AAE441ECAB5B878A9F2C6556808CEB3F9F1DE98233DF585C9B55C4FBFB0554DDF9ABF92FD3DD59BA2375106F8D849954D024B2D4F24F35579AA37468EC79DF574C1F494EEEEAA23513B929A3276BCF614EE85C14C605DCA80E9FD8C3FF53A5BD301B07FBB92F15104A46C79163243E0A8370B52702ED679AC6983418C1E8A7D8CAE2798329C653857715A2D7E8418B80F10AA41A6DE7540580ADDFF98246431E788342CCE5D7C50BBC484C54CC9B672C89A2B91303EAD8C47405F493438F37A8F0A66B2F7399ACB26AEDB020B8BD1C86F41A54B5451754DF060614FCC861884E1FDA7926355DD33C0A8A133891163863B930185271595BEDBE9CF489CCA62CECE2CDE2D957E93BEC57EBA934D0967F6FE75A8E2493DD2F1AE8AA95D04E58ECD04A3D22CD05DF153D68AE256BF35AD3C09C36D7248E56FAE59C19269971F87045E2EBB12F166AAD05550A6A6CD670C68BC2E170BE2E6279D520B5E1FBB80A47FF62FFBFD58170588874FB1BD054BDB5EB4F97697213C084E706519C19831531CA1F727CDC8DD523F8D5269693CB104ABE0087D206CA8B45A408B6483F1AE5FFFFD4130BB4B031EE0A054C125DF03208AAABA5C5CA03DFEEC5997454618E4D8D7E1EA0C0E2537B6712B5975D95957A1E21F861F59C01C2D91D78C9FCAA752A2EF4B51170293A646A9B878BECBBA72B9126E7F546A86E9381692C14D666FB5BD47F8A725096BCED467D8F8CA79D92D83E96403D07AFFEE3B118879E6D3ACB709662B70471E08F405000F845F4FDFCA125336C6DD55598C4255A36EC19463ABD18D13E5E8906364B6469170694E8FEE1E447191207B1A19C34DB1EBF0A900301ED826B5CB6D281EFB776EF6A96C4B1908DF37C8140E6FF9FA4344F9BC7F25B48F635BF06684D68986C54AD41DEA8CDA78DBCEC4209E831C6848359400BE7F8B3AA7852FBD2D15D7CCD7EA7ABFB1BA359C4C1981F375D800E8386888D72A6B532FC2A7AF10D5EE62FF8148431A139AB7B49859DD321D599ED479BB3FFDD001135598697DC5D8BBF98B27404580981A8DBA6759BDAAE8E10C7443C5652F228B98E19A27735B36321E8014CFC9BB77660EE7A0D89A003E0583E5EA99783BEF3BEF1058C908257868582F60F9B2387203F9C9BD1E9D1B795B8CAFF24E7C9B85F7F7B04573493146DD49F8BFDC34934E047D2A1613832F3B271AF3EE715335222A7E9E8F4F7785A56E27B11B3D45A9F72EFF8BADED2242DC928A616F820F0528C40047F7A9D18C20B72FA1972661CF8DCB078195A6FE7D96A0D7445E3EAADFB18D9A05BFFA3B0EF989164212E309A58ADF9AC4BE3E25B72D34B0D4E63DD8A58ECCF021533140CD6D9A29EB3F27FC13BD051ED8D893A095B43EE60C6F6D1768B55FB2A5DB30713E40BBF6DF31F0B4F8146E61A2139EAF1EA68E7B2D3AE4EF35EFAA827BDFA784417FD2B7F5A9AF7F968D53EB460E48A7B7D8B7681D1677AA7469F02D929C74458AFE461803ED2FD9262D042883096B36101483F5A699D39C2CD82BF6C3C36287440EF3943734A3B76502711D672AE0AA7A28BDAF9A30F903FCED1D16BC491E04A10552578625C91B3EDA70F22F8738FE52A7252C221F88F1835C005021D402B5F7D102860A54D8E656693FECA181B5C2588CB36D52A224F279BEF127265C3F81239C5632A8D9D0B7CE226ED88C3E2AFC66060DC9443D74FEC1F720AE74C230D272F779FD3C3B526384C6FCB00B7BEF6E47ACA3084AEB66BAC1928C47B66DE1D05DAA4B08E97B5BD346ECB69B9191858CE2662D44BD4860ED903B1DEFB7C3D02ED5A923B7739A3B60A97EB569681AE37B1B09A1981D5E209EFEF82DE5C0A688EC938E2F0B2F709D1367030DC0CB092D599C646BB5097AA00F5FC7B109E1A5B6FE4A17A372A44CC754624602589332EE120F17249AD27828DD299B409D055F7CE26845B1098054BE8371D1A342756111681A31E0F6CD4645BE43CD544D48E8DD7C366302EE382B01BCD31E5FC5F5E3621C21517FC0638B88CE35698F5D70F277BBD51C17AA05B4E4FEEF865C4897FD6B373ACF9CCC5691BB5D0C32E45FDB2F4F097390BFA15CAF9F4742B7AAE6579A035AE3749991DE242A97CBF0DCA1F257CE18F2B97B1C9FC4EA4C0FBB791C7FADD2C6E65B97D1A9FD9C5BDC7B5ECE4F036A21286976950AC09D30710700E1AA556F0C1FA0CB206474BB0F4FFC5002D79F30CE0AADC367AC409D6EA14F484FF45CB53D27200A8045021912B76807CA88F3B5DAE5324ECF8A7AEE32707CB59B2D0B9F8C9ECE85BD2B116BCAF5C1BEEC43A19B067CD71E93597C4193F2F2A1B0D13FDD7746051FD89A1DAE2728CB82442A41E5EEC785F3E23557CA403E44AF4F23C77062CBE2521C2DE44C580D0613E4F833B344BF51EBD1BD0B9531860FE1A8F6898E8F2AEFE6A7BADD522AD911064F65699B33C340CA44154D78776B1A1D36B4BA5A4361DD17FA73A38837EE5D3F13AF7FEBD19289CF23FA5C50EB03A16CF1918F189932A833529A196733748E930EC416CCF4CF6D92A09E97CED6A9F2F276759DA6F97DE2715CEC43283FA4674360C43BB85EAB703F1C9B18ED1089824C7AEEA38BF6189B36CEFF0FB8CF05E2B994A52D70F4AD15F447DC5F12DDC1FEF4A28C0F45F01A72D71D37758BEABB4A04B118AF10776190316622CE87CD4A2EC4E4A441A69C7C60B8C1051B45C8343B307F08076314554C1CEF42253705A1F2320E89629825AE2CF9C632C3CAA8C740749A2C9CDBD33E88A0EACFA22A7271C596A3733019343FCBC6C267F3513DD1DD2003D5FEBB508EBDE33F92704FB4867B449BA5E294A9C6C6ECD5AE811066260D70CEC212125C32F1506A23C530EEB7FBD92C1958B0C1B233BB8C3741B453C6DEFE3EA8783DFB09ACA742D4449E9F86D4E54CC456CCBCD181A6FA2A764A2BDA0F6C1B24C24D2165703C846F5C7CDA1C608375B684B3F68860EF308C0A7340764C7521EA6CBA138396C5CD6A645232E8238D2E82E8BC450CB50CAFEBEB6616EFDD937790CB026757C60BA861E2F8E80C29832A6E19D682179F0F6CDC4BB8B5AB0F23FA2196C551C8F5057DD5693FC920523021101B2C1F71CA8CFA9434F3D6CBCE052F6F4CFD96BA7AD1E7CE8667D1B16F543DCB42EF264879282053F56FAD6CA5CDEEEEFA239D9038A9E4033E043C592E13CC9FA054438C8A398BEC994AF6CB27077C68B3BE71143336B45E338CBD39EA9B27C78F72969827E6476436EE216CCA5FE291384CED556B2C19403872BCCFA5EEEBE4BDD65241D50433C184B489B7D411692C336E8E80E4CC63C0215C7FBC9AD51F3445C2E1A26A42F95EA4399C4CDCCFC84C520B4AF349C109B7469FC91E0B77B7F4AAC9D1B4C86132F8EFBF69C6E25C64FBB11B36C2051DE21AF12C1240C5F55E1B1C3F3209A3E4076681ACE1E0C5B297CF119D47AE9073914F9809629D6049155C41F37EA446372545D2EDE53D54F80997DA0D53E4BE5EED1A4923506C1E2ACA7BC8D556536C4CE1FAF2E045854F09F08181786FAB619F0DC80F513B9C5EEE803492A3F44AABD3283D79CF9AC42B150A0C4168CF7C2A1A8FA28D257E97A14969834F6E1B33604345132DE25A60C73CB78C74C90E4691607EC34C21EADBFCAB3A8C0647B64B6687E9D9AC2FF441A504F91AF84D76364E3DA325D213C2D270A530BBADA052407EC8D29A395ED16F3523EC2D941B333D8F168C9DFB0395CFBD2A242724736AFA36E50695EBC2A49911EA57226B75963A9EDB7812846B9DA0C07F14E0FBF786E9F930AE954A3DDE37D66F55731BC3AF34B6BAE950BD5ECC98F5C6C0C5E8FBB1F9E22922E62D749DA0E075BCF5A1FB52AB9CAC2DE78EE9A60455FCE43B106428EF7FB2CA67463DD24676A4F6D905F1EA80F05AAAF7B977B04020976AE64501734BA14E6D787AB551E7DCD7F4838B6EA01A18858FC34CD1CD3F4B669421BDA3B9EB9500067CF925A5AB76B99EEA29C55E308FAFA4D704A7A6A324FC7E2A90582D63A6F6481AC4DFE6B5C2C8114269E3C70061BCB8F61A3516BFA4A2F93B13288D99CEDA3A83509C444AEAFB1CFD5E38CCFEBEBF6C80462870F4E1F99A124164F5A27AA01031DECA8B4AAB997E7C12C52F0B7888A3BC5BDD677E07EE695A7DED4376076BCDDC9CDC27340BB52EC68631B64CD0613995B07750F9E4C3F08AF393C2EAFEE240D79820713F4E2407A9C7C2C3C8260EFAE0488B81D92F63481CCE7B57A2B6D051125D148B3980B9C4C1DC85BD0528A102E76B1B40AF8DB92555593D4BCF36681610730EC5AEB47B32B20074AAC4836A11A5C29600E7AA4C7B335E651044F969645B02241A39FC226B1369975F627633F37426F3FD21B07A7B82A2BAB11D8FF10CDF5DA78A9565322D23DD6090541DF1DD5D9C677E58DF7301C426E2B882BE12254B83991DE8815FDBC83B5AC95512265017F7E31512DE2C871DFDBDBCE7C9EDAFEB5A3F665C5A98F5F8716694C819B5924232F14CEDCA2D19F45729A3EB7747F2308AD947572ED60FE9C08947A77B32E5534B542E87B80618C422B23AB6A9D1D69F966B8B452F134D62D8AC4D74B8400594F51C9ADC0D5E70AF79FF1F51E97382A34A3964810A1CA8F01B8DACAAE44D6769F1AF0A00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/DUSVNN+Biko-Bold cguidfix
/F2.1/DUSVNN+Biko-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0 0 0 sc
0.60000002 i
q
0 0 925 991 rc
1 0 0 -1 483 48 cm
/F1.1[ 18 0 0 -18 0 0]sf
0.41600001 18 m
(!"#$%&'\(\)*&+,-*&'-.*&',,)[ 11.484000 13.806000 11.430000 12.276000 3.852000 4.140000 6.228000 9.126000 9.414000 3.240000 4.140000 8.766000 10.800000 8.136000 3.240000 4.140000 6.228000 8.136000 9.378000 3.240000 4.140000 6.228000 10.800000 0.000000 ] xS
Q
0.61176473 0.81176472 0.7019608 sc
q
475 268 m
675 268 l
675 68 l
475 68 l
475 268 l
h
W*
0 0 925 991 rc
470 273 m
680 273 l
680 63 l
470 63 l
h
f
Q
0 0 0 sc
q
0 0 925 991 rc
1 0 0 -1 268.5 48 cm
/F1.1[ 18 0 0 -18 0 0]sf
0.266 18 m
(!"#$%&\(.*&'/'*&.'*&',,)[ 11.484000 13.806000 11.430000 12.276000 3.852000 4.140000 9.126000 9.378000 3.240000 4.140000 6.228000 8.946000 6.228000 3.240000 4.140000 9.378000 6.228000 3.240000 4.140000 6.228000 10.800000 0.000000 ] xS
Q
0.23137255 0.51372552 0.35686275 sc
q
250 268 m
450 268 l
450 68 l
250 68 l
250 268 l
h
W*
0 0 925 991 rc
245 273 m
455 273 l
455 63 l
245 63 l
h
f
Q
0 0 0 sc
q
0 0 925 991 rc
1 0 0 -1 42.5 48 cm
/F1.1[ 18 0 0 -18 0 0]sf
0.33899999 18 m
(!"#$%&/\)*&0,*&\(\)*&',,)[ 11.484000 13.806000 11.430000 12.276000 3.852000 4.140000 8.946000 9.414000 3.240000 4.140000 9.666000 10.800000 3.240000 4.140000 9.126000 9.414000 3.240000 4.140000 6.228000 10.800000 0.000000 ] xS
Q
0.14117648 0.3137255 0.21960784 sc
q
25 268 m
225 268 l
225 68 l
25 68 l
25 268 l
h
W*
0 0 925 991 rc
20 273 m
230 273 l
230 63 l
20 63 l
h
f
Q
0 0 0 sc
q
0 0 925 991 rc
1 0 0 -1 25 322 cm
/F2.1[ 24 0 0 -24 0 0]sf
0 23 m
(!"##$%&'\('"\))[ 18.528000 8.544000 12.216000 12.216000 13.032000 5.520000 18.192000 13.152000 6.000000 13.152000 8.544000 0.000000 ] xS
1 0 0 -1 704.5 370 cm
/F1.1[ 18 0 0 -18 0 0]sf
0.235 18 m
(!"#$%&+\(/*&+/1*&+,/*&',,)[ 11.484000 13.806000 11.430000 12.276000 3.852000 4.140000 8.766000 9.126000 8.946000 3.240000 4.140000 8.766000 8.946000 10.512000 3.240000 4.140000 8.766000 10.800000 8.946000 3.240000 4.140000 6.228000 10.800000 0.000000 ] xS
Q
0.99215686 0.91764706 0.79607844 sc
q
700 590 m
900 590 l
900 390 l
700 390 l
700 590 l
h
W*
0 0 925 991 rc
695 595 m
905 595 l
905 385 l
695 385 l
h
f
Q
0 0 0 sc
q
0 0 925 991 rc
1 0 0 -1 483.5 370 cm
/F1.1[ 18 0 0 -18 0 0]sf
0.096000001 18 m
(!"#$%&+'1*&'0+*&'1/*&',,)[ 11.484000 13.806000 11.430000 12.276000 3.852000 4.140000 8.766000 6.228000 10.512000 3.240000 4.140000 6.228000 9.666000 8.766000 3.240000 4.140000 6.228000 10.512000 8.946000 3.240000 4.140000 6.228000 10.800000 0.000000 ] xS
Q
0.8392157 0.71372551 0.56078434 sc
q
475 590 m
675 590 l
675 390 l
475 390 l
475 590 l
h
W*
0 0 925 991 rc
470 595 m
680 595 l
680 385 l
470 385 l
h
f
Q
0 0 0 sc
q
0 0 925 991 rc
1 0 0 -1 264.5 370 cm
/F1.1[ 18 0 0 -18 0 0]sf
0.14399999 18 m
(!"#$%&+''*&'',*&1+*&',,)[ 11.484000 13.806000 11.430000 12.276000 3.852000 4.140000 8.766000 6.228000 6.228000 3.240000 4.140000 6.228000 6.228000 10.800000 3.240000 4.140000 10.512000 8.766000 3.240000 4.140000 6.228000 10.800000 0.000000 ] xS
Q
0.82745099 0.43137255 0.16470589 sc
q
250 590 m
450 590 l
450 390 l
250 390 l
250 590 l
h
W*
0 0 925 991 rc
245 595 m
455 595 l
455 385 l
245 385 l
h
f
Q
0 0 0 sc
q
0 0 925 991 rc
1 0 0 -1 42 370 cm
/F1.1[ 18 0 0 -18 0 0]sf
0.29899999 18 m
(!"#$%&'/'*&\)\(*&\(.*&',,)[ 11.484000 13.806000 11.430000 12.276000 3.852000 4.140000 6.228000 8.946000 6.228000 3.240000 4.140000 9.414000 9.126000 3.240000 4.140000 9.126000 9.378000 3.240000 4.140000 6.228000 10.800000 0.000000 ] xS
Q
0.51372552 0.25490198 0.23137255 sc
q
25 590 m
225 590 l
225 390 l
25 390 l
25 590 l
h
W*
0 0 925 991 rc
20 595 m
230 595 l
230 385 l
20 385 l
h
f
Q
0 0 0 sc
q
0 0 925 991 rc
1 0 0 -1 25 644 cm
/F2.1[ 24 0 0 -24 0 0]sf
0 23 m
(*"'+$%&'\('"\))[ 15.552000 8.544000 13.152000 16.704000 13.032000 5.520000 18.192000 13.152000 6.000000 13.152000 8.544000 0.000000 ] xS
1 0 0 -1 270 692 cm
/F1.1[ 18 0 0 -18 0 0]sf
0.296 18 m
(!"#$%&'\)*&+1*&++*&',,)[ 11.484000 13.806000 11.430000 12.276000 3.852000 4.140000 6.228000 9.414000 3.240000 4.140000 8.766000 10.512000 3.240000 4.140000 8.766000 8.766000 3.240000 4.140000 6.228000 10.800000 0.000000 ] xS
Q
0.062745102 0.094117649 0.086274512 sc
q
250 912 m
450 912 l
450 712 l
250 712 l
250 912 l
h
W*
0 0 925 991 rc
245 917 m
455 917 l
455 707 l
245 707 l
h
f
Q
0 0 0 sc
q
0 0 925 991 rc
1 0 0 -1 55 692 cm
/F1.1[ 18 0 0 -18 0 0]sf
0.322 18 m
(!"#$%&,*&,*&,*&',,)[ 11.484000 13.806000 11.430000 12.276000 3.852000 4.140000 10.800000 3.240000 4.140000 10.800000 3.240000 4.140000 10.800000 3.240000 4.140000 6.228000 10.800000 0.000000 ] xS
Q
q
25 912 m
225 912 l
225 712 l
25 712 l
25 912 l
h
W*
0 0 925 991 rc
20 917 m
230 917 l
230 707 l
20 707 l
h
f
Q
q
0 0 925 991 rc
1 0 0 -1 25 966 cm
/F2.1[ 24 0 0 -24 0 0]sf
0 23 m
(,-".%&'\('"\))[ 16.872000 13.392000 8.544000 13.008000 5.520000 18.192000 13.152000 6.000000 13.152000 8.544000 0.000000 ] xS
ep
end
